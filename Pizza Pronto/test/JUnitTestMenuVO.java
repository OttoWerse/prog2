import static org.junit.jupiter.api.Assertions.assertNotNull;import static org.junit.jupiter.api.Assertions.assertTrue;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.lang.reflect.Modifier;import org.junit.jupiter.api.Assertions;import org.junit.jupiter.api.BeforeAll;import org.junit.jupiter.api.Test;import de.thb.dim.pizzaPronto.valueObjects.MenuVO;/** * DishVO, PastaVO, PizzaVO and Dessert are tested. *  * Special assert statements are used for testing <br> *  * @author Gabriele Schmidt * @version 2.0 04.03.2019 */public class JUnitTestMenuVO {		private static Class<MenuVO> myMenuClass;	private static Field dishes;	private static Method initMenu;	private static int modifiersInitMenu;				@BeforeAll	public static void initOnce() throws NoSuchFieldException, SecurityException, NoSuchMethodException{				myMenuClass = MenuVO.class;				dishes = myMenuClass.getDeclaredField("dishes");				initMenu = myMenuClass.getDeclaredMethod("initMenu");		modifiersInitMenu = initMenu.getModifiers();	}					@Test	public void testMenuVONoNUMBER_OF_DISHES() {		Assertions.assertThrows(NoSuchFieldException.class, () -> { myMenuClass.getDeclaredField("NUMBER_OF_DISHES");});	}			@Test	public void testMenuVOInitMenuIsPrivate() throws NoSuchMethodException {		 assertTrue(Modifier.isPrivate(modifiersInitMenu), "Methode initMenu of menuVO is private");	}		@Test	public void testMenuVODishesDataType() {		assertTrue(dishes.getType().toString().equals("interface java.util.List"),"dishes in MenuVO is type DishVO");	}		@Test	public void testMenuVOgetDish() {		MenuVO menu = new MenuVO();		for(int i = 0; i < menu.getNumberOfDishes();i++)		assertNotNull(menu.getDish(i),"All dishes initialized");	}		@Test	public void testMenuVOgetDishIndexTooHighIndexOutOfBoundsException() {		MenuVO menu = new MenuVO();		int i = menu.getNumberOfDishes();		Assertions.assertThrows(IndexOutOfBoundsException.class, () ->		menu.getDish(i));	}			}